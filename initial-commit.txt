1. our first commit

git init (initialize git branch)
git add (adds file to branch)
git commit -m " my first commit to learning project" (commiting changes to branch)
***error!!!
git config --global user.email "alex.khesin75@gmail.com"
git config --global user.name "Alex Khesin"
git commit -m " my first commit to learning project"
git ls-files (list all files added to branch )
git rm "file name" (removed file from branch [later commit required])
git checklout "filename" == git restore "file name" (undouing changes to uncommited file )
git clean -dn (show wich files will be deleted [uncommited ones])
git clean -df (delete files will be deleted [uncommited ones])
get restore --staged "file name" === git reset "file name" (undo staged changes)[requires checkout or clean after that]
git reset --soft HEAD~1 ( uncommiting file [the number after ~ says how much staps back])
git reset HEAD~1 (unstaging and uncommiting file [the number after ~ says how much staps back])
git reset --hard HEAD~1 (unstaging and uncommiting and deleting file [the number after ~ says how much staps back])
git diff "file name"
git tag "tag name " 

git stash (taking last commit to offline as snapshot)
git stash apply (moving to latest stash)
git stash apply 1 (moving to stash number 1 )
git stash pop 1 (pushing stash number 1 to repo)
git stash push -m"some comment" (saving stash with comment)
git stash drop 0 (deleting stash number 0)
git stash clear (removing all stashes)


git reflog (shows all steps you didd with git)
git reset --hard HEAD~1 (canceling last commit including all cnages[like removing file if was created])
git reset --soft HEAD~1 (canseling last commit but not undouing changes)

in case we delete branch
git reflog
copy hash
git checkout "hash" (the previous to delete) {will take to memory branch status of that hash}
git switch -c "branchname" (will create new branch from memory snapshot )